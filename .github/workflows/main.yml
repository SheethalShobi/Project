name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      KUBECONFIG_SECRET: ${{ secrets.KUBECONFIG }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # -------------------
      # Setup Node.js for frontend
      # -------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # -------------------
      # Setup Python for backend services
      # -------------------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # -------------------
      # Install dependencies & run tests for backend services
      # -------------------
      - name: Install & Test Backend Services
        run: |
          for service in flight-service recommendation-service user-service holidays-service; do
            echo "=== $service ==="
            cd $service
            if [ -f "requirements.txt" ]; then
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pytest || true
            fi
            cd ..
          done

      # -------------------
      # Lint and test frontend
      # -------------------
      - name: Lint Frontend
        run: |
          cd frontend
          npm install
          npm run lint || true
          npm test || true
          cd ..

      # -------------------
      # Docker login
      # -------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Verify Docker login
        run: docker info

      # -------------------
      # Build Docker images
      # -------------------
      - name: Build Docker Images
        run: |
          docker build -t $DOCKERHUB_USERNAME/frontend:latest ./frontend
          docker build -t $DOCKERHUB_USERNAME/flight-service:latest ./flight-service
          docker build -t $DOCKERHUB_USERNAME/recommendation-service:latest ./recommendation-service
          docker build -t $DOCKERHUB_USERNAME/user-service:latest ./user-service
          docker build -t $DOCKERHUB_USERNAME/holidays-service:latest ./holidays-service

      # -------------------
      # Push Docker images
      # -------------------
      - name: Push Docker Images
        run: |
          docker push $DOCKERHUB_USERNAME/frontend:latest
          docker push $DOCKERHUB_USERNAME/flight-service:latest
          docker push $DOCKERHUB_USERNAME/recommendation-service:latest
          docker push $DOCKERHUB_USERNAME/user-service:latest
          docker push $DOCKERHUB_USERNAME/holidays-service:latest

      # -------------------
      # Setup kubectl
      # -------------------
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'

      - name: Configure kubeconfig
        run: |
          echo "${KUBECONFIG_SECRET}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      # -------------------
      # Deploy backend services
      # -------------------
      - name: Deploy Services to Kubernetes
        run: |
         for service in flights-service recommendation-backend user-service holidays-service frontend; do
            kubectl --kubeconfig=kubeconfig apply -f k8s/${service}-deployment.yaml
            kubectl --kubeconfig=kubeconfig apply -f k8s/${service}.yaml
         done


      # -------------------
      # Deploy frontend
      # -------------------
      - name: Deploy Frontend
        run: |
          kubectl --kubeconfig=kubeconfig apply -f k8s/frontend.yaml

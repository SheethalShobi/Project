name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    permissions:
      contents: read
      actions: read
      security-events: write

    env:
      FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
      FLIGHT_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/flights-service:latest
      HOLIDAY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/holidays-service:latest
      RECOMMEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/recommendation-backend:latest
      USER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest

    steps:
      # -------------------
      # Checkout repository
      # -------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # -------------------
      # Setup Node.js for frontend
      # -------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # -------------------
      # Setup Python for backend
      # -------------------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # -------------------
      # Install backend dependencies
      # -------------------
      - name: Install Backend Dependencies
        working-directory: ./flight-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Holidays Service Dependencies
        working-directory: ./holidays-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Recommendation Service Dependencies
        working-directory: ./recommendation-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install User Service Dependencies
        working-directory: ./user-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -------------------
      # Run backend tests (optional)
      # -------------------
      - name: Run Backend Tests
        run: |
          cd flight-service && pytest || true
          cd ../holidays-service && pytest || true
          cd ../recommendation-service && pytest || true
          cd ../user-service && pytest || true

      # -------------------
      # Lint frontend and run unit tests
      # -------------------
     ## - name: Lint and Test Frontend
     ##   working-directory: ./frontend
      #  run: |
       #   npm install
        #  npm run lint
         # npm test || true

      # -------------------
      # Security checks
      # -------------------
        # -------------------
      # Docker build & push
      # -------------------
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Images
        run: |
          docker build -t $FRONTEND_IMAGE ./frontend
          docker build -t $FLIGHT_IMAGE ./flight-service
          docker build -t $HOLIDAY_IMAGE ./holidays-service
          docker build -t $RECOMMEND_IMAGE ./recommendation-service
          docker build -t $USER_IMAGE ./user-service

      - name: Push Docker Images
        run: |
          docker push $FRONTEND_IMAGE
          docker push $FLIGHT_IMAGE
          docker push $HOLIDAY_IMAGE
          docker push $RECOMMEND_IMAGE
          docker push $USER_IMAGE

      # -------------------
      # Kubernetes setup
      # -------------------
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'

           # -------------------
      # Deploy all Kubernetes resources
      # -------------------
      - name: Deploy Kubernetes Resources
        run: |
          kubectl apply -f k8s/ --recursive=false || true
